name: "CI/CD Pipeline"
on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'
env:
  NODE_DEFAULT_VERSION: 22
  NODE_OPTIONS: "--max_old_space_size=4096"
  CYCLONEDX_NPM_VERSION: '^2.0.0||^3.0.0'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js 22"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install application minimalistically"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      - name: "Lint source code"
        run: npm run lint
      - name: "Lint customization configs"
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml


  coverage-report:
    runs-on: ubuntu-latest
    if: github.repository == 'juice-shop/juice-shop' && github.event_name == 'push'
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Download unit test coverage data"
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: unit-test-lcov
      - name: "Download API test coverage data"
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 #v4.1.8
        with:
          name: api-test-lcov
      - name: "Publish coverage to Codeclimate"
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          sed -i s/SF:/SF:frontend\\//g frontend-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.frontend.json frontend-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.server.json server-lcov.info
          ./cc-test-reporter format-coverage -t lcov -o codeclimate.api.json api-lcov.info
          ./cc-test-reporter sum-coverage codeclimate.*.json -p 3
          ./cc-test-reporter upload-coverage
        shell: bash


  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Execute smoke test on Docker"
        run: docker compose -f docker-compose.test.yml up --exit-code-from sut

  docker:
    if: github.repository == 'juice-shop/juice-shop' && github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf #v3.2.0
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 #v3.8.0
      - name: "Login to DockerHub"
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 #v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Set tag & labels for ${{ github.ref }}"
        run: |
          if [ "$GITHUB_REF" == "refs/heads/master" ]; then
          echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
          echo "DOCKER_TAG=snapshot" >> $GITHUB_ENV
          fi
          echo "VCS_REF=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”`" >> $GITHUB_ENV
      - name: "Build and push for AMD64 and ARM64 processors"
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 #v6.1.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            bkimminich/juice-shop:${{ env.DOCKER_TAG }}
          build-args: |
            VCS_REF=${{ env.VCS_REF }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            CYCLONEDX_NPM_VERSION=${{ env.CYCLONEDX_NPM_VERSION }}

  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Install application
        run: npm install
      
      - name: Generate coverage reports
        run: |
          npm test
          npm run frisby
      
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            build/reports/coverage/frontend-tests/lcov.info
            build/reports/coverage/server-tests/lcov.info
            build/reports/coverage/api-tests/lcov.info
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=santoshgarole5992_juice-shop
            -Dsonar.organization=santoshgarole5992
            -Dsonar.sources=lib,routes,models,config,frontend/src,views,server.ts,app.ts
            -Dsonar.javascript.lcov.reportPaths=build/reports/coverage/frontend-tests/lcov.info,build/reports/coverage/server-tests/lcov.info,build/reports/coverage/api-tests/lcov.info
      
      - name: Archive SonarQube scanner work directory
        if: always()
        run: |
          tar -czf sonarqube-scannerwork.tar.gz .scannerwork || true
      
      - name: Upload SonarQube scanner artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-scannerwork
          path: sonarqube-scannerwork.tar.gz
          retention-days: 7

      - name: Export SonarQube Security Hotspots
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/hotspots/search?projectKey=santoshgarole5992_juice-shop" -o security-hotspots.pdf

      - name: Upload Security Hotspots Report
        uses: actions/upload-artifact@v4
        with:
          name: security-hotspots
          path: security-hotspots.pdf
          retention-days: 7

      - name: Export SonarQube Issues (Code Scanning) as JSON
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/issues/search?componentKeys=santoshgarole5992_juice-shop&types=VULNERABILITY,BUG,CODE_SMELL" -o code-scanning-issues.pdf

      - name: Upload Code Scanning Issues Report
        uses: actions/upload-artifact@v4
        with:
          name: code-scanning-issues
          path: code-scanning-issues.pdf
          retention-days: 7

      - name: Generate JSON coverage summary
        run: |
          npx nyc report --reporter=json-summary --report-dir=build/reports/coverage/frontend-tests || true
          npx nyc report --reporter=json-summary --report-dir=build/reports/coverage/server-tests || true
          npx nyc report --reporter=json-summary --report-dir=build/reports/coverage/api-tests || true

      - name: Upload code coverage summary (JSON)
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-json
          path: |
            build/reports/coverage/frontend-tests/coverage-summary.json
            build/reports/coverage/server-tests/coverage-summary.json
            build/reports/coverage/api-tests/coverage-summary.json
          retention-days: 7